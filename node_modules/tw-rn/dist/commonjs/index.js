"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  View: true,
  Text: true,
  Image: true,
  TextInput: true,
  ScrollView: true,
  Switch: true,
  FlatList: true,
  SectionList: true,
  DrawerLayoutAndroid: true,
  ActivityIndicator: true,
  KeyboardAvoidingView: true,
  ImageBackground: true,
  SafeAreaView: true,
  TouchableHighlight: true,
  TouchableOpacity: true,
  TouchableWithoutFeedback: true,
  VirtualizedList: true,
  Animated: true,
  withTwrn: true,
  tw: true
};
Object.defineProperty(exports, "withTwrn", {
  enumerable: true,
  get: function get() {
    return _hocs.withTwrn;
  }
});
Object.defineProperty(exports, "tw", {
  enumerable: true,
  get: function get() {
    return _tw.tw;
  }
});
exports.Animated = exports.VirtualizedList = exports.TouchableWithoutFeedback = exports.TouchableOpacity = exports.TouchableHighlight = exports.SafeAreaView = exports.ImageBackground = exports.KeyboardAvoidingView = exports.ActivityIndicator = exports.DrawerLayoutAndroid = exports.SectionList = exports.FlatList = exports.Switch = exports.ScrollView = exports.TextInput = exports.Image = exports.Text = exports.View = void 0;

var RN = _interopRequireWildcard(require("react-native"));

var _hocs = require("./hocs");

var _types = require("./types");

Object.keys(_types).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _types[key];
    }
  });
});

var _tw = require("./tw");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// Basic Components
const View = (0, _hocs.withTwrn)(RN.View, ["style"]);
exports.View = View;
const Text = (0, _hocs.withTwrn)(RN.Text, ["style"]);
exports.Text = Text;
const Image = (0, _hocs.withTwrn)(RN.Image, ["style"]);
exports.Image = Image;
const TextInput = (0, _hocs.withTwrn)(RN.TextInput, ["style"]);
exports.TextInput = TextInput;
const ScrollView = (0, _hocs.withTwrn)(RN.ScrollView, ["style", "contentContainerStyle"]); // User interface

exports.ScrollView = ScrollView;
const Switch = (0, _hocs.withTwrn)(RN.Switch, ["style"]); // List Views

exports.Switch = Switch;
const FlatList = (0, _hocs.withTwrn)(RN.FlatList, ["style", "contentContainerStyle", "ListFooterComponentStyle", "ListHeaderComponentStyle", "columnWrapperStyle"]);
exports.FlatList = FlatList;
const SectionList = (0, _hocs.withTwrn)(RN.SectionList, ["style", "contentContainerStyle"]); // Android Components and APIs

exports.SectionList = SectionList;
const DrawerLayoutAndroid = (0, _hocs.withTwrn)(RN.DrawerLayoutAndroid, ["style"]); // Others

exports.DrawerLayoutAndroid = DrawerLayoutAndroid;
const ActivityIndicator = (0, _hocs.withTwrn)(RN.ActivityIndicator, ["style"]);
exports.ActivityIndicator = ActivityIndicator;
const KeyboardAvoidingView = (0, _hocs.withTwrn)(RN.KeyboardAvoidingView, ["style"]); // Rest

exports.KeyboardAvoidingView = KeyboardAvoidingView;
const ImageBackground = (0, _hocs.withTwrn)(RN.ImageBackground, ["style", "imageStyle"]);
exports.ImageBackground = ImageBackground;
const SafeAreaView = (0, _hocs.withTwrn)(RN.SafeAreaView, ["style"]);
exports.SafeAreaView = SafeAreaView;
const TouchableHighlight = (0, _hocs.withTwrn)(RN.TouchableHighlight, ["style"]);
exports.TouchableHighlight = TouchableHighlight;
const TouchableOpacity = (0, _hocs.withTwrn)(RN.TouchableOpacity, ["style"]);
exports.TouchableOpacity = TouchableOpacity;
const TouchableWithoutFeedback = (0, _hocs.withTwrn)(RN.TouchableWithoutFeedback, ["style"]); // For some reason "ListFooterComponentStyle" and "ListHeaderComponentStyle" are not in FlatList type
// definitions but they are in the docs https://reactnative.dev/docs/virtualizedlist

exports.TouchableWithoutFeedback = TouchableWithoutFeedback;
const VirtualizedList = (0, _hocs.withTwrn)(RN.VirtualizedList, ["style", "contentContainerStyle", "ListFooterComponentStyle", "ListHeaderComponentStyle"]);
exports.VirtualizedList = VirtualizedList;

const Animated = _objectSpread(_objectSpread({}, RN.Animated), {}, {
  Image: (0, _hocs.withTwrn)(RN.Animated.Image, ["style"]),
  ScrollView: (0, _hocs.withTwrn)(RN.Animated.ScrollView, ["style", "contentContainerStyle"]),
  Text: (0, _hocs.withTwrn)(RN.Animated.Text, ["style"]),
  View: (0, _hocs.withTwrn)(RN.Animated.View, ["style"]),
  FlatList: (0, _hocs.withTwrn)(RN.Animated.FlatList, ["style", "contentContainerStyle", "ListFooterComponentStyle", "ListHeaderComponentStyle", "columnWrapperStyle"]),
  SectionList: (0, _hocs.withTwrn)(RN.Animated.SectionList, ["style", "contentContainerStyle"])
});

exports.Animated = Animated;
//# sourceMappingURL=index.js.map