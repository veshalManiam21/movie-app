{"version":3,"sources":["useFocusStyles.ts"],"names":["useMemo","useCallback","useState","useFocusStyles","styles","onFocus","onBlur","isFocused","setIsFocused","focusStyles","map","style","undefined","focus","hasfocusStyles","length","some","Object","keys","handleOnFocus","e","handleOnBlur"],"mappings":"AACA,SAASA,OAAT,EAAkBC,WAAlB,EAA+BC,QAA/B,QAA+C,OAA/C;AAGA,OAAO,MAAMC,cAAc,GAAG,CAC5BC,MAD4B,EAE5BC,OAF4B,EAG5BC,MAH4B,KAQzB;AACH,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAMO,WAAW,GAAGT,OAAO,CAAC,MAAM;AAChC,WAAOI,MAAM,CAACM,GAAP,CAAYC,KAAD,IAAW;AAC3B,UAAIA,KAAK,KAAKC,SAAd,EAAyB;AAEzB,aAAOL,SAAS,GAAGI,KAAK,CAACE,KAAN,IAAe,EAAlB,GAAuB,EAAvC;AACD,KAJM,CAAP;AAKD,GAN0B,EAMxB,CAACT,MAAD,EAASG,SAAT,CANwB,CAA3B;AAQA,QAAMO,cAAc,GAAGd,OAAO,CAAC,MAAM;AACnC,WACEI,MAAM,CAACW,MAAP,GAAgB,CAAhB,IACAX,MAAM,CAACY,IAAP,CAAaL,KAAD,IAAWA,KAAK,IAAIA,KAAK,CAACE,KAAf,IAAwBI,MAAM,CAACC,IAAP,CAAYP,KAAK,CAACE,KAAlB,EAAyBE,MAAzB,GAAkC,CAAjF,CAFF;AAID,GAL6B,EAK3B,CAACX,MAAD,CAL2B,CAA9B;AAOA,QAAMe,aAAa,GAAGlB,WAAW,CAC9BmB,CAAD,IAA4C;AAC1Cf,IAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAGe,CAAH,CAAP;AACA,QAAIN,cAAJ,EAAoBN,YAAY,CAAC,IAAD,CAAZ;AACrB,GAJ8B,EAK/B,CAACM,cAAD,EAAiBL,WAAjB,EAA8BJ,OAA9B,CAL+B,CAAjC;AAQA,QAAMgB,YAAY,GAAGpB,WAAW,CAC7BmB,CAAD,IAA4C;AAC1Cd,IAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAGc,CAAH,CAAN;AACA,QAAIN,cAAJ,EAAoBN,YAAY,CAAC,KAAD,CAAZ;AACrB,GAJ6B,EAK9B,CAACM,cAAD,EAAiBL,WAAjB,EAA8BH,MAA9B,CAL8B,CAAhC;AAQA,SAAO;AAAEG,IAAAA,WAAF;AAAeU,IAAAA,aAAf;AAA8BE,IAAAA;AAA9B,GAAP;AACD,CA3CM","sourcesContent":["import { NativeSyntheticEvent, TargetedEvent } from \"react-native\";\nimport { useMemo, useCallback, useState } from \"react\";\nimport { PlatformVariantStyle, Style } from \"../types\";\n\nexport const useFocusStyles = (\n  styles: (PlatformVariantStyle | undefined)[],\n  onFocus?: (e: NativeSyntheticEvent<TargetedEvent>) => void,\n  onBlur?: (e: NativeSyntheticEvent<TargetedEvent>) => void\n): {\n  focusStyles: (Style | undefined)[];\n  handleOnFocus: (e: NativeSyntheticEvent<TargetedEvent>) => void;\n  handleOnBlur: (e: NativeSyntheticEvent<TargetedEvent>) => void;\n} => {\n  const [isFocused, setIsFocused] = useState(false);\n\n  const focusStyles = useMemo(() => {\n    return styles.map((style) => {\n      if (style === undefined) return;\n\n      return isFocused ? style.focus || {} : {};\n    });\n  }, [styles, isFocused]);\n\n  const hasfocusStyles = useMemo(() => {\n    return (\n      styles.length > 0 &&\n      styles.some((style) => style && style.focus && Object.keys(style.focus).length > 0)\n    );\n  }, [styles]);\n\n  const handleOnFocus = useCallback(\n    (e: NativeSyntheticEvent<TargetedEvent>) => {\n      onFocus?.(e);\n      if (hasfocusStyles) setIsFocused(true);\n    },\n    [hasfocusStyles, focusStyles, onFocus]\n  );\n\n  const handleOnBlur = useCallback(\n    (e: NativeSyntheticEvent<TargetedEvent>) => {\n      onBlur?.(e);\n      if (hasfocusStyles) setIsFocused(false);\n    },\n    [hasfocusStyles, focusStyles, onBlur]\n  );\n\n  return { focusStyles, handleOnFocus, handleOnBlur };\n};\n"]}