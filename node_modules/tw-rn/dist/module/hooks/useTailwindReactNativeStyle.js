import { useMemo, useCallback, useState, useEffect } from "react";
import { convertToTailwindReactNativeStyle } from "../helpers";
export const useTailwindReactNativeStyle = (props, styleKeys) => {
  const getStyleFromProps = useCallback(props => {
    return styleKeys.map(key => props[key]);
  }, []);
  const [styles, setStyles] = useState(getStyleFromProps(props));
  useEffect(() => {
    const newStyles = getStyleFromProps(props);

    if (JSON.stringify(styles) !== JSON.stringify(newStyles)) {
      setStyles(newStyles);
    }
  }, [props]);
  return useMemo(() => {
    return styles.map(style => {
      var _convertToTailwindRea;

      return (_convertToTailwindRea = convertToTailwindReactNativeStyle(style)) === null || _convertToTailwindRea === void 0 ? void 0 : _convertToTailwindRea.__;
    });
  }, [styles]);
};
//# sourceMappingURL=useTailwindReactNativeStyle.js.map