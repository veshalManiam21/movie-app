{"version":3,"sources":["useTailwindReactNativeStyle.ts"],"names":["useMemo","useCallback","useState","useEffect","convertToTailwindReactNativeStyle","useTailwindReactNativeStyle","props","styleKeys","getStyleFromProps","map","key","styles","setStyles","newStyles","JSON","stringify","style","__"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,WAAlB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AAEA,SAASC,iCAAT,QAAkD,YAAlD;AAGA,OAAO,MAAMC,2BAA2B,GAAG,CACzCC,KADyC,EAEzCC,SAFyC,KAGa;AACtD,QAAMC,iBAAiB,GAAGP,WAAW,CAAEK,KAAD,IAAW;AAC/C,WAAOC,SAAS,CAACE,GAAV,CAAeC,GAAD,IAAUJ,KAAD,CAAeI,GAAf,CAAvB,CAAP;AACD,GAFoC,EAElC,EAFkC,CAArC;AAIA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAACM,iBAAiB,CAACF,KAAD,CAAlB,CAApC;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,SAAS,GAAGL,iBAAiB,CAACF,KAAD,CAAnC;;AACA,QAAIQ,IAAI,CAACC,SAAL,CAAeJ,MAAf,MAA2BG,IAAI,CAACC,SAAL,CAAeF,SAAf,CAA/B,EAA0D;AACxDD,MAAAA,SAAS,CAACC,SAAD,CAAT;AACD;AACF,GALQ,EAKN,CAACP,KAAD,CALM,CAAT;AAOA,SAAON,OAAO,CAAC,MAAM;AACnB,WAAQW,MAAD,CAA4BF,GAA5B,CAAiCO,KAAD;AAAA;;AAAA,sCAAWZ,iCAAiC,CAACY,KAAD,CAA5C,0DAAW,sBAA0CC,EAArD;AAAA,KAAhC,CAAP;AACD,GAFa,EAEX,CAACN,MAAD,CAFW,CAAd;AAGD,CApBM","sourcesContent":["import { useMemo, useCallback, useState, useEffect } from \"react\";\nimport { ComputedTailwindReactNativeStyles, TailwindReactNativeStyle } from \"../types\";\nimport { convertToTailwindReactNativeStyle } from \"../helpers\";\nimport { StyleProp } from \"react-native\";\n\nexport const useTailwindReactNativeStyle = <P, O>(\n  props: P,\n  styleKeys: O[]\n): (ComputedTailwindReactNativeStyles | undefined)[] => {\n  const getStyleFromProps = useCallback((props) => {\n    return styleKeys.map((key) => (props as any)[key]);\n  }, []);\n\n  const [styles, setStyles] = useState(getStyleFromProps(props));\n\n  useEffect(() => {\n    const newStyles = getStyleFromProps(props);\n    if (JSON.stringify(styles) !== JSON.stringify(newStyles)) {\n      setStyles(newStyles);\n    }\n  }, [props]);\n\n  return useMemo(() => {\n    return (styles as typeof styles[]).map((style) => convertToTailwindReactNativeStyle(style)?.__);\n  }, [styles]);\n};\n"]}