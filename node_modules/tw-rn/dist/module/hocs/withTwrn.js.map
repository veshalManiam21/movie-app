{"version":3,"sources":["withTwrn.tsx"],"names":["React","useMemo","useTailwindReactNativeStyle","usePlatformStyles","useMediaStyles","useHoverStyles","useFocusStyles","useOrientationStyles","useCombineStyles","withTwrn","Component","styleKeys","onMouseEnter","onMouseLeave","onFocus","onBlur","props","tailwindReactNativeStyle","platformStyles","mediaStyles","hoverStyles","handleOnMouseEnter","handleOnMouseLeave","focusStyles","handleOnFocus","handleOnBlur","orientationStyles","combinedStyles","regularOrAnimatedStylesProps","reduce","acc","key","index","some","style"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAA+BC,OAA/B,QAA8C,OAA9C;AAGA,SACEC,2BADF,EAEEC,iBAFF,EAGEC,cAHF,EAIEC,cAJF,EAKEC,cALF,EAMEC,oBANF,EAOEC,gBAPF,QAQO,UARP;AAiBA,OAAO,MAAMC,QAAQ,GAAG,CACtBC,SADsB,EAEtBC,SAFsB,KAGgB,UAMlC;AAAA,MANmC;AACvCC,IAAAA,YADuC;AAEvCC,IAAAA,YAFuC;AAGvCC,IAAAA,OAHuC;AAIvCC,IAAAA;AAJuC,GAMnC;AAAA,MADDC,KACC;;AACJ,QAAMC,wBAAwB,GAAGf,2BAA2B,CAC1Dc,KAD0D,EAE1DL,SAF0D,CAA5D;AAKA,QAAMO,cAAc,GAAGf,iBAAiB,CAACc,wBAAD,CAAxC;AAEA,QAAME,WAAW,GAAGf,cAAc,CAACc,cAAD,CAAlC;AAEA,QAAM;AACJE,IAAAA,WADI;AAEJC,IAAAA,kBAFI;AAGJC,IAAAA;AAHI,MAIFjB,cAAc,CAACa,cAAD,EAAiBN,YAAjB,EAA+BC,YAA/B,CAJlB;AAMA,QAAM;AAAEU,IAAAA,WAAF;AAAeC,IAAAA,aAAf;AAA8BC,IAAAA;AAA9B,MAA+CnB,cAAc,CACjEY,cADiE,EAEjEJ,OAFiE,EAGjEC,MAHiE,CAAnE;AAMA,QAAMW,iBAAiB,GAAGnB,oBAAoB,CAACW,cAAD,CAA9C;AAEA,QAAMS,cAAc,GAAGnB,gBAAgB,CAAC,CACtCW,WADsC,EAEtCO,iBAFsC,EAGtCN,WAHsC,EAItCG,WAJsC,CAAD,CAAvC,CAxBI,CA+BJ;;AACA,QAAMK,4BAA4B,GAAG3B,OAAO,CAC1C,MACEU,SAAS,CAACkB,MAAV,CACE,CAACC,GAAD,EAAMC,GAAN,EAAWC,KAAX,qCACKF,GADL;AAEE,KAACC,GAAD,GAAOJ,cAAc,CAACK,KAAD;AAFvB,IADF,EAKE,EALF,CAFwC,EAS1C,CAACL,cAAD,CAT0C,CAA5C,CAhCI,CA4CJ;AACA;;AACA,MAAIA,cAAc,CAACM,IAAf,CAAqBC,KAAD,IAAWA,KAAK,KAAK,IAAzC,CAAJ,EAAoD,OAAO,IAAP;AAEpD,sBACE,oBAAC,SAAD,eACOlB,KADP,EAEMY,4BAFN;AAGE,IAAA,YAAY,EAAEP,kBAHhB;AAIE,IAAA,YAAY,EAAEC,kBAJhB;AAKE,IAAA,OAAO,EAAEE,aALX;AAME,IAAA,MAAM,EAAEC;AANV,KADF;AAUD,CAnEM;AAqEP,eAAehB,QAAf","sourcesContent":["import React, { ComponentType, useMemo } from \"react\";\nimport { NativeSyntheticEvent, TargetedEvent } from \"react-native\";\nimport { TailwindReactNativeStyleProps } from \"../types\";\nimport {\n  useTailwindReactNativeStyle,\n  usePlatformStyles,\n  useMediaStyles,\n  useHoverStyles,\n  useFocusStyles,\n  useOrientationStyles,\n  useCombineStyles,\n} from \"../hooks\";\n\nexport type VariantProps<P, O extends keyof P> = {\n  onMouseEnter?: (e: any) => void;\n  onMouseLeave?: (e: any) => void;\n  onFocus?: (e: NativeSyntheticEvent<TargetedEvent>) => void;\n  onBlur?: (e: NativeSyntheticEvent<TargetedEvent>) => void;\n} & TailwindReactNativeStyleProps<P, O>;\n\nexport const withTwrn = <P extends object, O extends keyof P>(\n  Component: ComponentType<P>,\n  styleKeys: O[]\n): ComponentType<VariantProps<P, O>> => ({\n  onMouseEnter,\n  onMouseLeave,\n  onFocus,\n  onBlur,\n  ...props\n}) => {\n  const tailwindReactNativeStyle = useTailwindReactNativeStyle(\n    props,\n    styleKeys\n  );\n\n  const platformStyles = usePlatformStyles(tailwindReactNativeStyle);\n\n  const mediaStyles = useMediaStyles(platformStyles);\n\n  const {\n    hoverStyles,\n    handleOnMouseEnter,\n    handleOnMouseLeave,\n  } = useHoverStyles(platformStyles, onMouseEnter, onMouseLeave);\n\n  const { focusStyles, handleOnFocus, handleOnBlur } = useFocusStyles(\n    platformStyles,\n    onFocus,\n    onBlur\n  );\n\n  const orientationStyles = useOrientationStyles(platformStyles);\n\n  const combinedStyles = useCombineStyles([\n    mediaStyles,\n    orientationStyles,\n    hoverStyles,\n    focusStyles,\n  ]);\n\n  // Combining styles position with keys indicated in the styleKeys\n  const regularOrAnimatedStylesProps = useMemo(\n    () =>\n      styleKeys.reduce(\n        (acc, key, index) => ({\n          ...acc,\n          [key]: combinedStyles[index],\n        }),\n        {}\n      ),\n    [combinedStyles]\n  );\n\n  // If combinedStyles are null, it means that we're in SSR and should not\n  // render because we don't have the destination size. Note: can be improved.\n  if (combinedStyles.some((style) => style === null)) return null;\n\n  return (\n    <Component\n      {...(props as P)}\n      {...regularOrAnimatedStylesProps}\n      onMouseEnter={handleOnMouseEnter}\n      onMouseLeave={handleOnMouseLeave}\n      onFocus={handleOnFocus}\n      onBlur={handleOnBlur}\n    />\n  );\n};\n\nexport default withTwrn;\n"]}