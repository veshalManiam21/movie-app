"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var prefixNegativeModifiers_1 = __importDefault(require("tailwindcss/lib/util/prefixNegativeModifiers"));
exports.default = (function (_a) {
    var addUtilities = _a.addUtilities, e = _a.e, theme = _a.theme, variants = _a.variants;
    var margin = theme("margin") || {};
    var platform = theme("platform") || "react-native";
    var reactGenerator = function (modifier, value) {
        var _a;
        return (_a = {},
            _a["." + e(prefixNegativeModifiers_1.default("m", modifier))] = { margin: "" + value },
            _a["." + e(prefixNegativeModifiers_1.default("my", modifier))] = {
                "margin-top": "" + value,
                "margin-bottom": "" + value,
            },
            _a["." + e(prefixNegativeModifiers_1.default("mx", modifier))] = {
                "margin-left": "" + value,
                "margin-right": "" + value,
            },
            _a["." + e(prefixNegativeModifiers_1.default("mt", modifier))] = { "margin-top": "" + value },
            _a["." + e(prefixNegativeModifiers_1.default("mr", modifier))] = { "margin-right": "" + value },
            _a["." + e(prefixNegativeModifiers_1.default("mb", modifier))] = { "margin-bottom": "" + value },
            _a["." + e(prefixNegativeModifiers_1.default("ml", modifier))] = { "margin-left": "" + value },
            _a);
    };
    var reactNativeGenerator = function (modifier, value) {
        var _a;
        return (_a = {},
            _a["." + e(prefixNegativeModifiers_1.default("m", modifier))] = { margin: "" + value },
            _a["." + e(prefixNegativeModifiers_1.default("my", modifier))] = {
                "margin-top": "" + value,
                "margin-bottom": "" + value,
            },
            _a["." + e(prefixNegativeModifiers_1.default("mx", modifier))] = {
                "margin-left": "" + value,
                "margin-right": "" + value,
            },
            _a["." + e(prefixNegativeModifiers_1.default("mt", modifier))] = { "margin-top": "" + value },
            _a["." + e(prefixNegativeModifiers_1.default("mr", modifier))] = { "margin-right": "" + value },
            _a["." + e(prefixNegativeModifiers_1.default("mb", modifier))] = { "margin-bottom": "" + value },
            _a["." + e(prefixNegativeModifiers_1.default("ml", modifier))] = { "margin-left": "" + value },
            _a["." + e(prefixNegativeModifiers_1.default("ms", modifier))] = { "margin-start": "" + value },
            _a["." + e(prefixNegativeModifiers_1.default("me", modifier))] = { "margin-end": "" + value },
            _a);
    };
    var utilities = Object.entries(margin).reduce(function (acc, _a) {
        var modifier = _a[0], value = _a[1];
        var generator = platform === "react" ? reactGenerator : reactNativeGenerator;
        return __assign(__assign({}, acc), generator(modifier === "default" ? "" : "-" + modifier, value));
    }, {});
    addUtilities(utilities, variants("margin"));
});
//# sourceMappingURL=margin copy.js.map