"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var chalk_1 = __importDefault(require("chalk"));
var postcss_1 = __importDefault(require("postcss"));
var log = console.log;
var logName = chalk_1.default.green("[tw-rn]");
var getUserRules = function (content) { return __awaiter(void 0, void 0, void 0, function () {
    var root, rules;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, postcss_1.default.parse(content, { from: undefined })];
            case 1:
                root = _a.sent();
                rules = [];
                root === null || root === void 0 ? void 0 : root.walkRules(function (rule) {
                    return rule.selectors.forEach(function (selector) {
                        rules = __spreadArrays(rules, [selector.replace(/[\.\\]/g, "")]);
                    });
                });
                return [2 /*return*/, rules];
        }
    });
}); };
var execute = function (content, platform) { return __awaiter(void 0, void 0, void 0, function () {
    var userRules, processed, onProcessed, plugin, options;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                process.env.RN_TW_ENV = platform;
                console.time("Finishing processing");
                log(logName + " building");
                return [4 /*yield*/, getUserRules(content)];
            case 1:
                userRules = _a.sent();
                processed = {};
                onProcessed = function (p) { return (processed = p); };
                plugin = require("./plugin")({ onProcessed: onProcessed, platform: platform, userRules: userRules });
                options = { from: undefined };
                return [4 /*yield*/, postcss_1.default([require("tailwindcss"), plugin]).process(content, options)];
            case 2:
                _a.sent();
                console.timeEnd("Finishing processing");
                log(logName + " built");
                return [2 /*return*/, processed];
        }
    });
}); };
exports.default = execute;
//# sourceMappingURL=index.js.map