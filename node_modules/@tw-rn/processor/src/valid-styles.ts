const any = () => true;
const number = (v: string) => !!/^\d+$/.exec(v);
const oneOf = (arr: string[]) => (v: string) => arr.includes(v);
// TODO create regex for matching strings and colors

export const reactNativeValidStyles = {
  alignContent: oneOf([
    "flex-start",
    "flex-end",
    "center",
    "stretch",
    "space-between",
    "space-around",
  ]),
  alignItems: oneOf([
    "flex-start",
    "flex-end",
    "center",
    "stretch",
    "baseline",
  ]),
  alignSelf: oneOf([
    "auto",
    "flex-start",
    "flex-end",
    "center",
    "stretch",
    "baseline",
  ]),
  aspectRatio: any, // number
  backfaceVisibility: oneOf(["visible", "hidden"]),
  backgroundColor: any,
  borderBottomColor: any,
  borderBottomEndRadius: any,
  borderBottomLeftRadius: any,
  borderBottomRightRadius: any,
  borderBottomStartRadius: any,
  borderBottomWidth: any,
  borderColor: any,
  borderEndColor: any,
  borderEndWidth: any,
  borderLeftColor: any,
  borderLeftWidth: any,
  borderRadius: any,
  borderRightColor: any,
  borderRightWidth: any,
  borderStartColor: any,
  borderStartWidth: any,
  borderStyle: oneOf(["solid", "dashed", "dotted"]),
  borderTopColor: any,
  borderTopEndRadius: any,
  borderTopLeftRadius: any,
  borderTopRightRadius: any,
  borderTopStartRadius: any,
  borderTopWidth: any,
  borderWidth: any,
  bottom: any,
  color: any,
  direction: oneOf(["inherit", "ltr", "rtl"]),
  display: oneOf(["none", "flex"]),
  elevation: any,
  end: any,
  flex: any,
  flexBasis: any,
  flexDirection: oneOf(["row", "row-reverse", "column", "column-reverse"]),
  flexGrow: any,
  flexShrink: any,
  flexWrap: oneOf(["wrap", "nowrap", "wrap-reverse"]),
  fontFamily: any,
  fontSize: any,
  fontStyle: oneOf(["normal", "italic"]),
  fontVariant: any,
  fontWeight: oneOf([
    "normal",
    "bold",
    "100",
    "200",
    "300",
    "400",
    "500",
    "600",
    "700",
    "800",
    "900",
  ]),
  height: any,
  includeFontPadding: any,
  justifyContent: oneOf([
    "flex-start",
    "flex-end",
    "center",
    "space-between",
    "space-around",
    "space-evenly",
  ]),
  left: any,
  letterSpacing: number,
  lineHeight: any,
  margin: any,
  marginBottom: any,
  marginEnd: any,
  marginHorizontal: any,
  marginLeft: any,
  marginRight: any,
  marginStart: any,
  marginTop: any,
  marginVertical: any,
  maxHeight: any,
  maxWidth: any,
  minHeight: any,
  minWidth: any,
  opacity: any,
  overflow: oneOf(["visible", "hidden", "scroll"]),
  overlayColor: any,
  padding: any,
  paddingBottom: any,
  paddingEnd: any,
  paddingHorizontal: any,
  paddingLeft: any,
  paddingRight: any,
  paddingStart: any,
  paddingTop: any,
  paddingVertical: any,
  position: oneOf(["absolute", "relative"]),
  resizeMode: oneOf(["center", "contain", "cover", "repeat", "stretch"]),
  right: any,
  rotation: any,
  scaleX: any,
  scaleY: any,
  shadowColor: any,
  shadowOffset: any,
  shadowOpacity: any,
  shadowRadius: any,
  start: any,
  textAlign: oneOf(["auto", "left", "right", "center", "justify"]),
  textAlignVertical: oneOf(["auto", "top", "bottom", "center"]),
  textDecorationColor: any,
  textDecorationLine: oneOf([
    "none",
    "underline",
    "line-through",
    "underline line-through",
  ]),
  textDecorationStyle: oneOf(["solid", "double", "dotted", "dashed"]),
  textShadowColor: any,
  textShadowOffset: any,
  textShadowRadius: any,
  textTransform: oneOf(["none", "capitalize", "uppercase", "lowercase"]),
  tintColor: any,
  top: any,
  transform: any,
  translateX: any,
  translateY: any,
  width: any,
  writingDirection: oneOf(["auto", "ltr", "rtl"]),
  zIndex: number,
  transitionProperty: any,
  transitionDelay: any,
  transitionDuration: any,
  transitionTimingFunction: any,
};

export const reactValidStyles = {
  ...reactNativeValidStyles,
  boxSizing: oneOf(["border-box", "content-box"]),
  display: oneOf([
    "none",
    "block",
    "flow-root",
    "inline-block",
    "inline",
    "flex",
    "inline-flex",
    "grid",
    "inline-grid",
    "table",
    "table-caption",
    "table-cell",
    "table-column",
    "table-column-group",
    "table-footer-group",
    "table-header-group",
    "table-row-group",
    "table-row",
  ]),
  position: oneOf(["static", "fixed", "absolute", "relative", "sticky"]),
  visibility: oneOf(["visible", "hidden"]),
  outlineStyle: any,
  cursor: any,
  userSelect: any,
  letterSpacing: any,
};
